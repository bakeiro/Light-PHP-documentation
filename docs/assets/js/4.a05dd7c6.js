(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{177:function(e,t,s){"use strict";s.r(t);var i=s(0),r=Object(i.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),s("p",[e._v("Enabling this setting will launch the whoop debug info page anytime an exception happens")]),e._v(" "),e._m(6),e._v(" "),s("p",[e._v("Composer it's integrated in this framework, it only load the used libraries since uses autoload.")]),e._v(" "),e._m(7),e._v(" "),s("p",[e._v("This framework it's also integrated with npm")]),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),s("p",[e._v("In the folder "),s("code",[e._v("system/engine")]),e._v(" you can see the framework "),s("router-link",{attrs:{to:"./Engine.html"}},[e._v("engine")])],1),e._v(" "),e._m(11),e._v(" "),s("p",[e._v("You can use the functions inside engine/Util to do some common operation, examples are isSjaxRequest, sanitizeText, escape, generateSimpleToken, generateCSRFToken and so on")]),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),e._m(19)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"more-info"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#more-info","aria-hidden":"true"}},[this._v("#")]),this._v(" ðŸ“œ More info")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"log-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-files","aria-hidden":"true"}},[this._v("#")]),this._v(" Log files")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("All the warnings/errors stays in "),s("code",[e._v("system/logs")]),e._v(" in 2 files, "),s("code",[e._v("errors.log")]),e._v(" for errors and "),s("code",[e._v("notice.log")]),e._v(" for warnings and errors, the function triggered when a exception happens it's in "),s("code",[e._v("system/engine/Errors.php")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"debug-console"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#debug-console","aria-hidden":"true"}},[this._v("#")]),this._v(" Debug console")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Enabling the debug feature (This can be done in "),t("code",[this._v("system/config/config_data.php")]),this._v(" file) a debug console will pop up in every page, if any warning or exception is throw this will be show in the console (on the bottom of the page)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"debug-whoops"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#debug-whoops","aria-hidden":"true"}},[this._v("#")]),this._v(" Debug whoops")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"composer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#composer","aria-hidden":"true"}},[this._v("#")]),this._v(" Composer")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"npm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#npm","aria-hidden":"true"}},[this._v("#")]),this._v(" NPM")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"upload-folder"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#upload-folder","aria-hidden":"true"}},[this._v("#")]),this._v(" Upload folder")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The upload folder it's located in "),t("code",[this._v("system/upload")]),this._v(" it's designed for uploading files, (by default, can't execute scripts from outside stored here)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"engine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#engine","aria-hidden":"true"}},[this._v("#")]),this._v(" Engine")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"useful-functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#useful-functions","aria-hidden":"true"}},[this._v("#")]),this._v(" Useful functions")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"compressed-resources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compressed-resources","aria-hidden":"true"}},[this._v("#")]),this._v(" Compressed resources")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("All the HTML, CSS, JavaScript, Text, XML and fonts resources are compressed (gzip) by default, this is done using the "),t("code",[this._v(".htaccess")]),this._v(" file")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"cache-control"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cache-control","aria-hidden":"true"}},[this._v("#")]),this._v(" Cache control")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("You can define a version number for the "),t("code",[this._v("JS/CSS")]),this._v(" resources, so, every time you make an update you just change the cache number, and the user's browser will make a fresh download of these resources.\n(Basically, all the resources ends with "),t("code",[this._v("?v={%cache_number}")]),this._v(", changing this number makes the browser think it needs to download a different file)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"escaped-input-values"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#escaped-input-values","aria-hidden":"true"}},[this._v("#")]),this._v(" Escaped input values")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v("$_GET")]),this._v(", "),t("code",[this._v("$_POST")]),this._v(" are escaped by default, you can check "),t("code",[this._v("Util::cleanInput")]),this._v(" (system/engine/Util->cleanInput()) for more details")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"security-implementations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#security-implementations","aria-hidden":"true"}},[this._v("#")]),this._v(" Security implementations:")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[e._v("Session id fixation")]),e._v(" "),s("li",[e._v("Session hijacking")]),e._v(" "),s("li",[e._v("Xss attacks")]),e._v(" "),s("li",[e._v("SQL injections")]),e._v(" "),s("li",[e._v("Can't exec scripts outside the framework")]),e._v(" "),s("li",[e._v("Only the JS/CSS/Images resources are accesible from outside")]),e._v(" "),s("li",[e._v("Pass encryption in the Database")]),e._v(" "),s("li",[e._v("Session data encryption")]),e._v(" "),s("li",[e._v("CSRF token [You need to disable 'allow_forms_without_csrf_token' in the config file and implement manually the CSRF token in every form, you can use Session::get(\"CSRF_input\")")]),e._v(" "),s("li",[e._v("Easily enable/disable debug info (for disabling this in production environments)")])])}],!1,null,null,null);r.options.__file="MoreInfo.md";t.default=r.exports}}]);