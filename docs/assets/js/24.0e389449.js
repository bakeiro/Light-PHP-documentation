(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{452:function(t,a,e){"use strict";e.r(a);var s=e(65),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"output"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output"}},[t._v("#")]),t._v(" Output")]),t._v(" "),e("p",[e("code",[t._v("$this->output->method()")])]),t._v(" "),e("h3",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("p",[t._v("Light-PHP comes with a tiny but useful template engine, it can output templates, replacing placeholders by variables, it can output the template directly to the end user, or returning as string, it can add JS and CSS files to one specific template and more.")]),t._v(" "),e("h3",{attrs:{id:"output-template"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output-template"}},[t._v("#")]),t._v(" Output template")]),t._v(" "),e("p",[t._v("For outputting the template, you use the "),e("code",[t._v("$this->output->load()")]),t._v(" method, which receives a string path to the template file (normally, under "),e("code",[t._v("src/view/template")]),t._v(" path).")]),t._v(" "),e("h3",{attrs:{id:"example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("p",[t._v("To load the template with the variables you just use the "),e("code",[t._v("$this->output->load();")]),e("br"),t._v(" "),e("code",[t._v('$this->output->load("folder/templateName", $array_with_data);')])]),t._v(" "),e("h3",{attrs:{id:"before"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#before"}},[t._v("#")]),t._v(" Before:")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[t._v("\t"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user_name")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user_address")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("h3",{attrs:{id:"after"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#after"}},[t._v("#")]),t._v(" After:")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[t._v("\t"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{user_name}}"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{user_addresss}}"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("h3",{attrs:{id:"load-template"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#load-template"}},[t._v("#")]),t._v(" Load template")]),t._v(" "),e("p",[t._v("In case you want to get the template as string and don't output it, you can use the method "),e("code",[t._v("loadTemplate()")]),t._v(" which returns the compiled template as string")]),t._v(" "),e("h3",{attrs:{id:"adding-js-and-css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adding-js-and-css"}},[t._v("#")]),t._v(" Adding JS and CSS")]),t._v(" "),e("p",[t._v("In case you want to add JS and CSS files from PHP (for dynamic pages for example) you can use "),e("code",[t._v("addJS()")]),t._v(" and "),e("code",[t._v("addCSS()")]),t._v(" before loading the template")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/bakeiro/Light-PHP/blob/master/system/library/Output.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Template code"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);