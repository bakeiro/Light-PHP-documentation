(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{440:function(e,t,s){"use strict";s.r(t);var a=s(65),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"light-php"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#light-php"}},[e._v("#")]),e._v(" Light-PHP")]),e._v(" "),s("p",[e._v("Light PHP it's an open-source minimal PHP framework that only includes what's necessary, avoiding big and complex structures, yet capable of building big and fully-featured API/Websites.")]),e._v(" "),s("h3",{attrs:{id:"modular-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modular-structure"}},[e._v("#")]),e._v(" Modular structure")]),e._v(" "),s("p",[e._v("All the application code in Light-PHP it's divided by modules, this makes the code separated and decoupled also easier to maintain and modify. All the modules are located under the "),s("code",[e._v("src/")]),e._v(" path."),s("br"),e._v("\nThese modules it's what Light-PHP uses to run your application, so, you won't write any application code outside the "),s("code",[e._v("src/")]),e._v(" (unless you want to change the framework's behavior)."),s("br"),e._v("\n(more info here)")]),e._v(" "),s("h3",{attrs:{id:"mvc-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvc-structure"}},[e._v("#")]),e._v(" MVC structure")]),e._v(" "),s("p",[e._v("All the modules have a MVC structure, so, inside each module, it's divided by a "),s("code",[e._v("model/")]),e._v(", "),s("code",[e._v("view/")]),e._v(", "),s("code",[e._v("controller/")]),e._v(" folders (dividing the module's responsibility)."),s("br"),e._v("\nIn some cases you create a module which don't return any template (i.e: returning a JSON), for this, you can create a module without the view folder (it's not mandatory). Same for Model folder, if your module doesn't needed you don't have to create it. (excepting controller folder, must be there always).")]),e._v(" "),s("h3",{attrs:{id:"services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#services"}},[e._v("#")]),e._v(" Services")]),e._v(" "),s("p",[e._v("Light-PHP cames with a service container out of the box, this container holds useful services that are instantiated and ready to use in your module's controllers and models, being able to use $this->service_name (i.e: "),s("code",[e._v("$this->database")]),e._v(", "),s("code",[e._v("$this->session")]),e._v("...)"),s("br"),e._v("\n(more info here)")]),e._v(" "),s("h3",{attrs:{id:"main-folders"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#main-folders"}},[e._v("#")]),e._v(" Main folders")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" /\n ├─ public\n ├─ src\n └─ system\n    ├─ config\n    ├─ logs\n    └─ ...\n")])])]),s("p",[s("code",[e._v("src")]),e._v(": Main folder, all the PHP application code it's located here (where you will spend 90% of the time)\n"),s("code",[e._v("public")]),e._v(": Index.php and public files accesible from outside (JS, CSS, PDFs in case they exist)"),s("br"),e._v(" "),s("code",[e._v("system")]),e._v(": Stores the engine, services, composer and the framework configuration"),s("br"),e._v(" "),s("code",[e._v("system/config")]),e._v(": Config of database/email credentials, and framework settings"),s("br"),e._v(" "),s("code",[e._v("system/logs")]),e._v(": Logs (warning, exceptions) created")])])}),[],!1,null,null,null);t.default=r.exports}}]);