(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{446:function(t,e,i){"use strict";i.r(e);var a=i(65),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"faq"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[t._v("#")]),t._v(" FAQ")]),t._v(" "),i("h3",{attrs:{id:"why-this-project"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#why-this-project"}},[t._v("#")]),t._v(" Why this project ?")]),t._v(" "),i("p",[t._v("I know that there are a lot of PHP frameworks available, but I wanted to build one, I made this for learning and challenging myself, but end up with a nice project which is understandable, hackable and easy to use, so I decide to update and update this project to make it available for everybody.")]),t._v(" "),i("h3",{attrs:{id:"does-this-project-follows-the-good-practices"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#does-this-project-follows-the-good-practices"}},[t._v("#")]),t._v(" Does this project follows the good practices ?")]),t._v(" "),i("p",[t._v("This projects implements:")]),t._v(" "),i("ul",[i("li",[t._v("PSR-12 coding style")]),t._v(" "),i("li",[t._v("PSR-4 autoloading")]),t._v(" "),i("li",[t._v("PSR-11 container")]),t._v(" "),i("li",[t._v("Security implementations")]),t._v(" "),i("li",[t._v("Coding patterns (MVC)")]),t._v(" "),i("li",[t._v("Clean code")]),t._v(" "),i("li",[t._v("Dependency injection (SOLID)")]),t._v(" "),i("li",[t._v("Single responsibility principle (SOLID)")]),t._v(" "),i("li",[t._v("Composer for PHP libraries")]),t._v(" "),i("li",[t._v("NPM for the JS libraries")]),t._v(" "),i("li",[t._v("Eslint for parsing JS code (CI with github actions)")]),t._v(" "),i("li",[t._v("PHPCS for parsing PHP code (CI with github actions)")]),t._v(" "),i("li",[t._v("Git Bug/feature template")]),t._v(" "),i("li",[t._v("Editor config included")]),t._v(" "),i("li",[t._v("Simple php.ini config included")]),t._v(" "),i("li",[t._v("Error handler")]),t._v(" "),i("li",[t._v("PHPDoc included\n...")])]),t._v(" "),i("h1",{attrs:{id:"roadmap"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#roadmap"}},[t._v("#")]),t._v(" Roadmap")]),t._v(" "),i("p",[i("a",{attrs:{href:"https://github.com/bakeiro/Light-PHP/projects",target:"_blank",rel:"noopener noreferrer"}},[t._v("Roadmap"),i("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=o.exports}}]);