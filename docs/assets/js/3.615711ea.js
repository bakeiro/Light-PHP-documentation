(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{186:function(t,e,s){t.exports=s.p+"assets/img/console_explanation.650aec5c.png"},187:function(t,e,s){t.exports=s.p+"assets/img/debug_console_server_info.c4bc0f36.png"},188:function(t,e,s){"use strict";var n=s(69),a=s.n(n);e.default=a.a},202:function(t,e,s){"use strict";s.r(e);var n=s(188),a=s(0);var o=Object(a.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"debug-console"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#debug-console","aria-hidden":"true"}},[t._v("#")]),t._v(" ðŸŒŒ Debug console")]),t._v(" "),n("p",[t._v("Enabling this feature a debug console will appear in every page, the console will show every warning, exception, debug message and all the database queries! this will be automatically and the debug console will be only loaded when you set the "),n("code",[t._v("debug_console")]),t._v(' value to "true" in '),n("code",[t._v("config.php")])]),t._v(" "),n("h3",{attrs:{id:"debug-console-example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#debug-console-example","aria-hidden":"true"}},[t._v("#")]),t._v(" Debug console example")]),t._v(" "),n("img",{class:t.$style.debug_img,attrs:{src:s(186),alt:"foo"}}),t._v(" "),n("p",[t._v("Other use of the debug console is to check all the server info, here you can see info like datetime of the server, if PDO is enable, if openSSL is activated, where is the php.ini file and much more!")]),t._v(" "),n("h3",{attrs:{id:"server-info-in-the-console"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#server-info-in-the-console","aria-hidden":"true"}},[t._v("#")]),t._v(" Server info in the console")]),t._v(" "),n("img",{class:t.$style.shadow_img,attrs:{src:s(187),alt:"foo"}}),t._v(" "),n("h3",{attrs:{id:"enabling-debug-console"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#enabling-debug-console","aria-hidden":"true"}},[t._v("#")]),t._v(" Enabling debug console")]),t._v(" "),n("p",[t._v("For enabling this feature, we need to set the 'debug_console' setting to 'true' after this the debug console became available.")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Debug")]),t._v("\nConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"debug_console"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean constant"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set `true` for enabling debug console")]),t._v("\nConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"send_email_errors"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean constant"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"whoops"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean constant"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nConfig"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"execution_time"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("microtime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean constant"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])},[],!1,function(t){this.$style=n.default.locals||n.default},null,null);e.default=o.exports},69:function(t,e,s){t.exports={debug_img:"debug_img_2lS2NPAt",shadow_img:"shadow_img_Ai_9eMoa"}}}]);